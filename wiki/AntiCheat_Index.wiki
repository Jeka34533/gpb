#summary The AntiCheat Include
#labels AntiCheat

= Introduction =

With the AntiCheat you can help protect your server against money, speed, weapon and jetpack cheaters.
It is as easy as including the include and recompiling your script, but for usability you have many natives to your disposal.

== Key definitions ==

This are the standart definitions you can use in your script.
<code language="PAWN">
#define AC_ACTION_ONMONEY_REPORT   	(0) //ACset_ActionOnMoneyCheat

#define AC_ACTION_ONMONEY_RESET    	(1) //ACset_ActionOnMoneyCheat

#define AC_DETECTED_DISABLED_WEAPON (0) //used in AC_OnCheatDetected

#define AC_DETECTED_JETPACK 		(1) //used in AC_OnCheatDetected

#define AC_DETECTED_MONEY   		(2) //used in AC_OnCheatDetected

#define AC_DETECTED_SPAWNED_WEAPON  (3) //used in AC_OnCheatDetected

#define AC_DETECTED_SPEEDHACK		(4) //used in AC_OnCheatDetected
</code>



== Parameters Used In AntiCheat ==
||Parameter||Type||Description||
||ac_ticks||Integer||The interval between each plugin 'update'||
||ac_enable||Integer||Enabled(1) or disabled(0)||
||ac_allowed||Integer||Allowed(1) or disallowed(0)||
||playerid||Integer||The player identificator||
||weaponid||Integer||ID of the weapon||
||ammo||Integer||amount of ammo||
||enable||Integer||Enabled(1) or disabled(0)||
||ac_action||Integer||Action for ACset_ActionOnMoneyCheat||
||amount||Integer||amount of money||



== Functions ==
==== UpdateDelay ====
<code language="PAWN">
native ACget_UpdateDelay();
native ACset_UpdateDelay(ac_ticks);
</code>
These functions get/set the interval of the plugin anti-cheat check.


==== Jetpack ====
<code language="PAWN">
native ACget_JetpackCheck();
native ACset_JetpackCheck(ac_enable = 1);
native ACget_JetpackAllowed(playerid = 0);
native ACset_JetpackAllowed(ac_allowed = 1,playerid = (-1));
</code>
With these natives you can control the allowance of jetpacks.


==== Weapons ====
<code language="PAWN">
native ACget_WeaponCheck();
native ACset_WeaponCheck(ac_enable = 1);
native ACset_AllowedWeapon(weaponid,ac_allowed = 1,playerid = (-1));
native ACget_AllowedWeapon(weaponid,playerid = 0);
native ACgive_PlayerWeapon(playerid, weaponid, ammo);
native ACreset_PlayerWeapons(playerid);
native ACset_SpawnWeaponCheck(enable = 1);
native ACget_SpawnWeaponCheck();
native AC_PlayerHasWeapon(playerid, weaponid);
native ACget_PlayerWeapon(playerid);
</code>
This is the weapon code, you won't need them because all weapon functions in your gamemode are automatically replaced with these ones.


==== Money ====
<code language="PAWN">
native ACset_MoneyCheck(ac_enable = 1);
native ACget_MoneyCheck();
native ACget_ActionOnMoneyCheat();
native ACset_ActionOnMoneyCheat(ac_action = 0);
native ACget_PlayerMoney(playerid);
native ACgive_PlayerMoney(playerid,amount);
native ACset_PlayerMoney(playerid,amount);
native ACreset_PlayerMoney(playerid);
native ACfix_PlayerMoney(playerid);
</code>
This is the money code, you won't need them because all money functions in your gamemode are automatically replaced with these ones.
The ACfix_PlayerMoney native is used internally by the plugin to sychronise the client and server money, but you can use it manually.

ActionOnMoneyCheat tells the pluginm what to do if money cheat is detected - call the callback "public AC_OnCheatDetected" or reset the money to the server side money. 

==== SpeedHack ====
<code language="PAWN">
native ACget_SpeedCheck();
native ACset_SpeedCheck(ac_enable = 1);
</code>
With these natives you can control the anti-speedhack.


==== Misc ====
<code language="PAWN">
native AC_AddPlayerClass(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo);
native AC_AddPlayerClassEx(teamid, modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo);
</code>
These are internally used by the plugin, this avoids weapon detection bugs.

== CallBack ==
<code language="PAWN">
public AC_OnCheatDetected(playerid,cheat_type,ac_extra)
{

}
</code>
This is the callback that gets called when any cheat is detected,
the cheat_types are defined in the definitions and th as_extra parameter is for small things like, when weapon cheat is detected it reports the weaponid, if speedhack the vehicleid and if money the amount it had been raised/lowered.